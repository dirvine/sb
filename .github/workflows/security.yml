name: Security & Dependencies

on:
  schedule:
    # Run at 2 AM UTC every Monday
    - cron: '0 2 * * 1'
  push:
    branches: [ main ]
    paths:
      - '**/Cargo.toml'
      - '**/Cargo.lock'
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install cargo-audit
        run: cargo install cargo-audit
      
      - name: Run security audit
        run: |
          cargo audit --json > audit-report.json
          cargo audit
      
      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: audit-report.json
      
      - name: Create issue for vulnerabilities
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'ðŸ”’ Security vulnerabilities detected';
            const body = `Security audit has detected vulnerabilities in dependencies.
            
            Please review the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
            
            Run \`cargo audit fix\` locally to attempt automatic fixes.`;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'dependencies']
            });

  outdated:
    name: Check Outdated Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install cargo-outdated
        run: cargo install cargo-outdated
      
      - name: Check outdated dependencies
        run: |
          cargo outdated --exit-code 1 || true
          cargo outdated --format json > outdated-report.json
      
      - name: Upload outdated report
        uses: actions/upload-artifact@v4
        with:
          name: outdated-report
          path: outdated-report.json

  deny:
    name: Dependency License Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install cargo-deny
        run: cargo install cargo-deny
      
      - name: Check licenses
        run: cargo deny check licenses
      
      - name: Check bans
        run: cargo deny check bans
      
      - name: Check advisories
        run: cargo deny check advisories || true

  semver:
    name: Semver Compliance Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install cargo-semver-checks
        run: cargo install cargo-semver-checks
      
      - name: Check semver compliance
        run: |
          # Get the base branch
          BASE_BRANCH=${{ github.base_ref }}
          
          # Check semver compliance against base branch
          cargo semver-checks check-release --baseline-rev origin/$BASE_BRANCH

  supply-chain:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install cargo-vet
        run: cargo install cargo-vet
      
      - name: Initialize cargo-vet if needed
        run: |
          if [ ! -f supply-chain/config.toml ]; then
            cargo vet init
          fi
      
      - name: Check supply chain
        run: cargo vet check
      
      - name: Generate supply chain report
        run: |
          cargo vet dump-graph > supply-chain-graph.json
          cargo vet suggest > suggestions.txt
      
      - name: Upload supply chain artifacts
        uses: actions/upload-artifact@v4
        with:
          name: supply-chain-report
          path: |
            supply-chain-graph.json
            suggestions.txt

  update-dependencies:
    name: Update Dependencies PR
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Update dependencies
        run: |
          cargo update
          cargo upgrade --workspace --skip-compatible
      
      - name: Test updated dependencies
        run: cargo test --all-features
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'ðŸ”„ Weekly dependency updates'
          body: |
            ## Weekly Dependency Updates
            
            This PR contains automatic dependency updates from the weekly scheduled run.
            
            ### Changes
            - Updated Cargo.lock with latest compatible versions
            - All tests are passing with updated dependencies
            
            ### Review Checklist
            - [ ] Review changelog/release notes of major updates
            - [ ] Verify no breaking changes affect the application
            - [ ] Check for any new security advisories
            - [ ] Ensure CI passes on all platforms
          branch: deps/weekly-update
          delete-branch: true
          labels: |
            dependencies
            automated