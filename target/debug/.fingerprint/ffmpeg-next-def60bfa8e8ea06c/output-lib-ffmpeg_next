{"$message_type":"diagnostic","message":"cannot find value `AV_CH_LAYOUT_NATIVE` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":1182303,"byte_end":1182351,"line_start":26450,"line_end":26450,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"pub const AV_CH_LAYOUT_STEREO: libc::c_ulonglong = 3;","highlight_start":1,"highlight_end":49}],"label":"similarly named constant `AV_CH_LAYOUT_STEREO` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/channel_layout.rs","byte_start":1611,"byte_end":1630,"line_start":31,"line_end":31,"column_start":39,"column_end":58,"is_primary":true,"text":[{"text":"        const NATIVE                = AV_CH_LAYOUT_NATIVE;","highlight_start":39,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/channel_layout.rs","byte_start":1611,"byte_end":1630,"line_start":31,"line_end":31,"column_start":39,"column_end":58,"is_primary":true,"text":[{"text":"        const NATIVE                = AV_CH_LAYOUT_NATIVE;","highlight_start":39,"highlight_end":58}],"label":null,"suggested_replacement":"AV_CH_LAYOUT_STEREO","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AV_CH_LAYOUT_NATIVE` in this scope\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/channel_layout.rs:31:39\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const NATIVE                = AV_CH_LAYOUT_NATIVE;\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `AV_CH_LAYOUT_STEREO`\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs:26450:1\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AV_CH_LAYOUT_STEREO: libc::c_ulonglong = 3;\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AV_CH_LAYOUT_STEREO` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AV_PIX_FMT_XVMC` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":364848,"byte_end":364863,"line_start":10366,"line_end":10366,"column_start":5,"column_end":20,"is_primary":false,"text":[{"text":"    AV_PIX_FMT_NV12 = 23,","highlight_start":5,"highlight_end":20}],"label":"similarly named unit variant `AV_PIX_FMT_NV12` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/format/pixel.rs","byte_start":34942,"byte_end":34957,"line_start":1056,"line_end":1056,"column_start":28,"column_end":43,"is_primary":true,"text":[{"text":"            Pixel::XVMC => AV_PIX_FMT_XVMC,","highlight_start":28,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a unit variant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/format/pixel.rs","byte_start":34942,"byte_end":34957,"line_start":1056,"line_end":1056,"column_start":28,"column_end":43,"is_primary":true,"text":[{"text":"            Pixel::XVMC => AV_PIX_FMT_XVMC,","highlight_start":28,"highlight_end":43}],"label":null,"suggested_replacement":"AV_PIX_FMT_NV12","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AV_PIX_FMT_XVMC` in this scope\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/format/pixel.rs:1056:28\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1056\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Pixel::XVMC => AV_PIX_FMT_XVMC,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a unit variant with a similar name exists: `AV_PIX_FMT_NV12`\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs:10366:5\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10366\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AV_PIX_FMT_NV12 = 23,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named unit variant `AV_PIX_FMT_NV12` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AV_OPT_TYPE_CHANNEL_LAYOUT` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":797978,"byte_end":797998,"line_start":18825,"line_end":18825,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    AV_OPT_TYPE_CHLAYOUT = 19,","highlight_start":5,"highlight_end":25}],"label":"similarly named unit variant `AV_OPT_TYPE_CHLAYOUT` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/option/mod.rs","byte_start":2632,"byte_end":2658,"line_start":82,"line_end":82,"column_start":36,"column_end":62,"is_primary":true,"text":[{"text":"            Type::ChannelLayout => AV_OPT_TYPE_CHANNEL_LAYOUT,","highlight_start":36,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a unit variant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/option/mod.rs","byte_start":2632,"byte_end":2658,"line_start":82,"line_end":82,"column_start":36,"column_end":62,"is_primary":true,"text":[{"text":"            Type::ChannelLayout => AV_OPT_TYPE_CHANNEL_LAYOUT,","highlight_start":36,"highlight_end":62}],"label":null,"suggested_replacement":"AV_OPT_TYPE_CHLAYOUT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AV_OPT_TYPE_CHANNEL_LAYOUT` in this scope\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/option/mod.rs:82:36\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Type::ChannelLayout => AV_OPT_TYPE_CHANNEL_LAYOUT,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a unit variant with a similar name exists: `AV_OPT_TYPE_CHLAYOUT`\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs:18825:5\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18825\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AV_OPT_TYPE_CHLAYOUT = 19,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named unit variant `AV_OPT_TYPE_CHLAYOUT` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `AV_CODEC_ID_AYUV` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":533205,"byte_end":533221,"line_start":13138,"line_end":13138,"column_start":5,"column_end":21,"is_primary":false,"text":[{"text":"    AV_CODEC_ID_CYUV = 26,","highlight_start":5,"highlight_end":21}],"label":"similarly named unit variant `AV_CODEC_ID_CYUV` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/id.rs","byte_start":48611,"byte_end":48627,"line_start":1538,"line_end":1538,"column_start":25,"column_end":41,"is_primary":true,"text":[{"text":"            Id::AYUV => AV_CODEC_ID_AYUV,","highlight_start":25,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a unit variant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/id.rs","byte_start":48611,"byte_end":48627,"line_start":1538,"line_end":1538,"column_start":25,"column_end":41,"is_primary":true,"text":[{"text":"            Id::AYUV => AV_CODEC_ID_AYUV,","highlight_start":25,"highlight_end":41}],"label":null,"suggested_replacement":"AV_CODEC_ID_CYUV","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AV_CODEC_ID_AYUV` in this scope\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/id.rs:1538:25\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1538\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Id::AYUV => AV_CODEC_ID_AYUV,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a unit variant with a similar name exists: `AV_CODEC_ID_CYUV`\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs:13138:5\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AV_CODEC_ID_CYUV = 26,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named unit variant `AV_CODEC_ID_CYUV` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `av_get_channel_layout_nb_channels` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/channel_layout.rs","byte_start":3908,"byte_end":3941,"line_start":78,"line_end":78,"column_start":18,"column_end":51,"is_primary":true,"text":[{"text":"        unsafe { av_get_channel_layout_nb_channels(self.bits()) }","highlight_start":18,"highlight_end":51}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `av_get_channel_layout_nb_channels` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/channel_layout.rs:78:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { av_get_channel_layout_nb_channels(self.bits()) }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `av_get_default_channel_layout` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/channel_layout.rs","byte_start":4078,"byte_end":4107,"line_start":83,"line_end":83,"column_start":47,"column_end":76,"is_primary":true,"text":[{"text":"            ChannelLayout::from_bits_truncate(av_get_default_channel_layout(number) as c_ulonglong)","highlight_start":47,"highlight_end":76}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `av_get_default_channel_layout` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/channel_layout.rs:83:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ChannelLayout::from_bits_truncate(av_get_default_channel_layout(number) as c_ulonglong)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `coded_picture_number` on type `sys::AVFrame`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/video.rs","byte_start":4365,"byte_end":4385,"line_start":178,"line_end":178,"column_start":35,"column_end":55,"is_primary":true,"text":[{"text":"        unsafe { (*self.as_ptr()).coded_picture_number as usize }","highlight_start":35,"highlight_end":55}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `coded_picture_number` on type `sys::AVFrame`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/video.rs:178:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { (*self.as_ptr()).coded_picture_number as usize }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `display_picture_number` on type `sys::AVFrame`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/video.rs","byte_start":4496,"byte_end":4518,"line_start":183,"line_end":183,"column_start":35,"column_end":57,"is_primary":true,"text":[{"text":"        unsafe { (*self.as_ptr()).display_picture_number as usize }","highlight_start":35,"highlight_end":57}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `display_picture_number` on type `sys::AVFrame`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/video.rs:183:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { (*self.as_ptr()).display_picture_number as usize }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channel_layout` on type `sys::AVFrame`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/audio.rs","byte_start":1634,"byte_end":1648,"line_start":66,"line_end":66,"column_start":69,"column_end":83,"is_primary":true,"text":[{"text":"        unsafe { ChannelLayout::from_bits_truncate((*self.as_ptr()).channel_layout as c_ulonglong) }","highlight_start":69,"highlight_end":83}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channel_layout` on type `sys::AVFrame`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/audio.rs:66:69\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { ChannelLayout::from_bits_truncate((*self.as_ptr()).channel_layout as c_ulonglong) }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channel_layout` on type `sys::AVFrame`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/audio.rs","byte_start":1791,"byte_end":1805,"line_start":71,"line_end":71,"column_start":39,"column_end":53,"is_primary":true,"text":[{"text":"        unsafe { (*self.as_mut_ptr()).channel_layout = value.bits() }","highlight_start":39,"highlight_end":53}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channel_layout` on type `sys::AVFrame`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/audio.rs:71:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { (*self.as_mut_ptr()).channel_layout = value.bits() }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channels` on type `sys::AVFrame`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/audio.rs","byte_start":1914,"byte_end":1922,"line_start":76,"line_end":76,"column_start":35,"column_end":43,"is_primary":true,"text":[{"text":"        unsafe { (*self.as_ptr()).channels as u16 }","highlight_start":35,"highlight_end":43}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channels` on type `sys::AVFrame`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/audio.rs:76:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { (*self.as_ptr()).channels as u16 }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channels` on type `sys::AVFrame`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/audio.rs","byte_start":2052,"byte_end":2060,"line_start":82,"line_end":82,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"            (*self.as_mut_ptr()).channels = i32::from(value);","highlight_start":34,"highlight_end":42}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channels` on type `sys::AVFrame`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/audio.rs:82:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (*self.as_mut_ptr()).channels = i32::from(value);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `data`, `linesize`, `extended_data`, `width`, `height` ... and 40 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `pkt_duration` on type `sys::AVFrame`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/mod.rs","byte_start":1560,"byte_end":1572,"line_start":82,"line_end":82,"column_start":44,"column_end":56,"is_primary":true,"text":[{"text":"                duration: (*self.as_ptr()).pkt_duration,","highlight_start":44,"highlight_end":56}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a field with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/mod.rs","byte_start":1560,"byte_end":1572,"line_start":82,"line_end":82,"column_start":44,"column_end":56,"is_primary":true,"text":[{"text":"                duration: (*self.as_ptr()).pkt_duration,","highlight_start":44,"highlight_end":56}],"label":null,"suggested_replacement":"duration","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `pkt_duration` on type `sys::AVFrame`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/mod.rs:82:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                duration: (*self.as_ptr()).pkt_duration,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a field with a similar name exists\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                duration: (*self.as_ptr()).\u001b[0m\u001b[0m\u001b[38;5;9mpkt_duration\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                duration: (*self.as_ptr()).\u001b[0m\u001b[0m\u001b[38;5;10mduration\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `av_opt_set_channel_layout` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":827670,"byte_end":827861,"line_start":19435,"line_end":19440,"column_start":5,"column_end":22,"is_primary":false,"text":[{"text":"    pub fn av_opt_set_chlayout(","highlight_start":5,"highlight_end":32},{"text":"        obj: *mut libc::c_void,","highlight_start":1,"highlight_end":32},{"text":"        name: *const libc::c_char,","highlight_start":1,"highlight_end":35},{"text":"        layout: *const AVChannelLayout,","highlight_start":1,"highlight_end":40},{"text":"        search_flags: libc::c_int,","highlight_start":1,"highlight_end":35},{"text":"    ) -> libc::c_int;","highlight_start":1,"highlight_end":22}],"label":"similarly named function `av_opt_set_chlayout` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/option/traits.rs","byte_start":3673,"byte_end":3698,"line_start":137,"line_end":137,"column_start":20,"column_end":45,"is_primary":true,"text":[{"text":"            check!(av_opt_set_channel_layout(","highlight_start":20,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/option/traits.rs","byte_start":3673,"byte_end":3698,"line_start":137,"line_end":137,"column_start":20,"column_end":45,"is_primary":true,"text":[{"text":"            check!(av_opt_set_channel_layout(","highlight_start":20,"highlight_end":45}],"label":null,"suggested_replacement":"av_opt_set_chlayout","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `av_opt_set_channel_layout` in this scope\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/option/traits.rs:137:20\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            check!(av_opt_set_channel_layout(\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a function with a similar name exists: `av_opt_set_chlayout`\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs:19435:5\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19435\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn av_opt_set_chlayout(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19436\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        obj: *mut libc::c_void,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19437\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        name: *const libc::c_char,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19438\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        layout: *const AVChannelLayout,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19439\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        search_flags: libc::c_int,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19440\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> libc::c_int;\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named function `av_opt_set_chlayout` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channel_layouts` on type `sys::AVCodec`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/audio.rs","byte_start":953,"byte_end":968,"line_start":41,"line_end":41,"column_start":39,"column_end":54,"is_primary":true,"text":[{"text":"            if (*self.codec.as_ptr()).channel_layouts.is_null() {","highlight_start":39,"highlight_end":54}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a field with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/audio.rs","byte_start":953,"byte_end":968,"line_start":41,"line_end":41,"column_start":39,"column_end":54,"is_primary":true,"text":[{"text":"            if (*self.codec.as_ptr()).channel_layouts.is_null() {","highlight_start":39,"highlight_end":54}],"label":null,"suggested_replacement":"ch_layouts","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channel_layouts` on type `sys::AVCodec`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/audio.rs:41:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if (*self.codec.as_ptr()).channel_layouts.is_null() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a field with a similar name exists\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            if (*self.codec.as_ptr()).\u001b[0m\u001b[0m\u001b[38;5;9mchannel_layouts\u001b[0m\u001b[0m.is_null() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            if (*self.codec.as_ptr()).\u001b[0m\u001b[0m\u001b[38;5;10mch_layouts\u001b[0m\u001b[0m.is_null() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channel_layouts` on type `sys::AVCodec`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/audio.rs","byte_start":1111,"byte_end":1126,"line_start":45,"line_end":45,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"                    (*self.codec.as_ptr()).channel_layouts,","highlight_start":44,"highlight_end":59}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a field with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/audio.rs","byte_start":1111,"byte_end":1126,"line_start":45,"line_end":45,"column_start":44,"column_end":59,"is_primary":true,"text":[{"text":"                    (*self.codec.as_ptr()).channel_layouts,","highlight_start":44,"highlight_end":59}],"label":null,"suggested_replacement":"ch_layouts","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channel_layouts` on type `sys::AVCodec`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/audio.rs:45:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    (*self.codec.as_ptr()).channel_layouts,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a field with a similar name exists\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                    (*self.codec.as_ptr()).\u001b[0m\u001b[0m\u001b[38;5;9mchannel_layouts\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                    (*self.codec.as_ptr()).\u001b[0m\u001b[0m\u001b[38;5;10mch_layouts\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `slice_count` on type `sys::AVCodecContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/video.rs","byte_start":2442,"byte_end":2453,"line_start":89,"line_end":89,"column_start":34,"column_end":45,"is_primary":true,"text":[{"text":"            (*self.as_mut_ptr()).slice_count = value as c_int;","highlight_start":34,"highlight_end":45}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `slice_count` on type `sys::AVCodecContext`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/video.rs:89:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (*self.as_mut_ptr()).slice_count = value as c_int;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channels` on type `sys::AVCodecContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/audio.rs","byte_start":1282,"byte_end":1290,"line_start":51,"line_end":51,"column_start":35,"column_end":43,"is_primary":true,"text":[{"text":"        unsafe { (*self.as_ptr()).channels as u16 }","highlight_start":35,"highlight_end":43}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channels` on type `sys::AVCodecContext`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/audio.rs:51:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { (*self.as_ptr()).channels as u16 }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `frame_number` on type `sys::AVCodecContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/audio.rs","byte_start":1662,"byte_end":1674,"line_start":65,"line_end":65,"column_start":35,"column_end":47,"is_primary":true,"text":[{"text":"        unsafe { (*self.as_ptr()).frame_number as usize }","highlight_start":35,"highlight_end":47}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `frame_number` on type `sys::AVCodecContext`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/audio.rs:65:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { (*self.as_ptr()).frame_number as usize }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channel_layout` on type `sys::AVCodecContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/audio.rs","byte_start":1912,"byte_end":1926,"line_start":73,"line_end":73,"column_start":69,"column_end":83,"is_primary":true,"text":[{"text":"        unsafe { ChannelLayout::from_bits_truncate((*self.as_ptr()).channel_layout) }","highlight_start":69,"highlight_end":83}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channel_layout` on type `sys::AVCodecContext`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/audio.rs:73:69\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { ChannelLayout::from_bits_truncate((*self.as_ptr()).channel_layout) }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channel_layout` on type `sys::AVCodecContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/audio.rs","byte_start":2052,"byte_end":2066,"line_start":78,"line_end":78,"column_start":34,"column_end":48,"is_primary":true,"text":[{"text":"            (*self.as_mut_ptr()).channel_layout = value.bits();","highlight_start":34,"highlight_end":48}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channel_layout` on type `sys::AVCodecContext`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/audio.rs:78:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (*self.as_mut_ptr()).channel_layout = value.bits();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `request_channel_layout` on type `sys::AVCodecContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/audio.rs","byte_start":2219,"byte_end":2241,"line_start":84,"line_end":84,"column_start":34,"column_end":56,"is_primary":true,"text":[{"text":"            (*self.as_mut_ptr()).request_channel_layout = value.bits();","highlight_start":34,"highlight_end":56}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `request_channel_layout` on type `sys::AVCodecContext`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/decoder/audio.rs:84:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (*self.as_mut_ptr()).request_channel_layout = value.bits();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channel_layout` on type `sys::AVCodecContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/encoder/audio.rs","byte_start":2678,"byte_end":2692,"line_start":98,"line_end":98,"column_start":34,"column_end":48,"is_primary":true,"text":[{"text":"            (*self.as_mut_ptr()).channel_layout = value.bits();","highlight_start":34,"highlight_end":48}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channel_layout` on type `sys::AVCodecContext`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/encoder/audio.rs:98:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (*self.as_mut_ptr()).channel_layout = value.bits();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channel_layout` on type `sys::AVCodecContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/encoder/audio.rs","byte_start":2846,"byte_end":2860,"line_start":103,"line_end":103,"column_start":69,"column_end":83,"is_primary":true,"text":[{"text":"        unsafe { ChannelLayout::from_bits_truncate((*self.as_ptr()).channel_layout) }","highlight_start":69,"highlight_end":83}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channel_layout` on type `sys::AVCodecContext`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/encoder/audio.rs:103:69\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { ChannelLayout::from_bits_truncate((*self.as_ptr()).channel_layout) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channels` on type `sys::AVCodecContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/encoder/audio.rs","byte_start":2970,"byte_end":2978,"line_start":108,"line_end":108,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"            (*self.as_mut_ptr()).channels = value;","highlight_start":34,"highlight_end":42}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channels` on type `sys::AVCodecContext`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/encoder/audio.rs:108:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (*self.as_mut_ptr()).channels = value;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `channels` on type `sys::AVCodecContext`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/encoder/audio.rs","byte_start":3075,"byte_end":3083,"line_start":113,"line_end":113,"column_start":35,"column_end":43,"is_primary":true,"text":[{"text":"        unsafe { (*self.as_ptr()).channels as u16 }","highlight_start":35,"highlight_end":43}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `channels` on type `sys::AVCodecContext`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/encoder/audio.rs:113:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { (*self.as_ptr()).channels as u16 }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `av_class`, `log_level_offset`, `codec_type`, `codec`, `codec_id` ... and 95 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `swr_alloc_set_opts` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":1313915,"byte_end":1314314,"line_start":28865,"line_end":28875,"column_start":5,"column_end":22,"is_primary":false,"text":[{"text":"    pub fn swr_alloc_set_opts2(","highlight_start":5,"highlight_end":32},{"text":"        ps: *mut *mut SwrContext,","highlight_start":1,"highlight_end":34},{"text":"        out_ch_layout: *const AVChannelLayout,","highlight_start":1,"highlight_end":47},{"text":"        out_sample_fmt: AVSampleFormat,","highlight_start":1,"highlight_end":40},{"text":"        out_sample_rate: libc::c_int,","highlight_start":1,"highlight_end":38},{"text":"        in_ch_layout: *const AVChannelLayout,","highlight_start":1,"highlight_end":46},{"text":"        in_sample_fmt: AVSampleFormat,","highlight_start":1,"highlight_end":39},{"text":"        in_sample_rate: libc::c_int,","highlight_start":1,"highlight_end":37},{"text":"        log_offset: libc::c_int,","highlight_start":1,"highlight_end":33},{"text":"        log_ctx: *mut libc::c_void,","highlight_start":1,"highlight_end":36},{"text":"    ) -> libc::c_int;","highlight_start":1,"highlight_end":22}],"label":"similarly named function `swr_alloc_set_opts2` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/software/resampling/context.rs","byte_start":1629,"byte_end":1647,"line_start":71,"line_end":71,"column_start":23,"column_end":41,"is_primary":true,"text":[{"text":"            let ptr = swr_alloc_set_opts(","highlight_start":23,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/software/resampling/context.rs","byte_start":1629,"byte_end":1647,"line_start":71,"line_end":71,"column_start":23,"column_end":41,"is_primary":true,"text":[{"text":"            let ptr = swr_alloc_set_opts(","highlight_start":23,"highlight_end":41}],"label":null,"suggested_replacement":"swr_alloc_set_opts2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `swr_alloc_set_opts` in this scope\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/software/resampling/context.rs:71:23\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            let ptr = swr_alloc_set_opts(\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a function with a similar name exists: `swr_alloc_set_opts2`\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs:28865:5\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28865\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn swr_alloc_set_opts2(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28866\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ps: *mut *mut SwrContext,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28867\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        out_ch_layout: *const AVChannelLayout,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28868\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        out_sample_fmt: AVSampleFormat,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28874\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        log_ctx: *mut libc::c_void,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28875\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> libc::c_int;\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named function `swr_alloc_set_opts2` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"non-exhaustive patterns: `sys::AVColorSpace::AVCOL_SPC_IPT_C2`, `sys::AVColorSpace::AVCOL_SPC_YCGCO_RE` and `sys::AVColorSpace::AVCOL_SPC_YCGCO_RO` not covered","code":{"code":"E0004","explanation":"This error indicates that the compiler cannot guarantee a matching pattern for\none or more possible inputs to a match expression. Guaranteed matches are\nrequired in order to assign values to match expressions, or alternatively,\ndetermine the flow of execution.\n\nErroneous code example:\n\n```compile_fail,E0004\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x { // error: non-exhaustive patterns: `HastaLaVistaBaby` not covered\n    Terminator::TalkToMyHand => {}\n}\n```\n\nIf you encounter this error you must alter your patterns so that every possible\nvalue of the input type is matched. For types with a small number of variants\n(like enums) you should probably cover all cases explicitly. Alternatively, the\nunderscore `_` wildcard pattern can be added after all other patterns to match\n\"anything else\". Example:\n\n```\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    Terminator::HastaLaVistaBaby => {}\n}\n\n// or:\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    _ => {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/color/space.rs","byte_start":848,"byte_end":853,"line_start":44,"line_end":44,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"        match value {","highlight_start":15,"highlight_end":20}],"label":"patterns `sys::AVColorSpace::AVCOL_SPC_IPT_C2`, `sys::AVColorSpace::AVCOL_SPC_YCGCO_RE` and `sys::AVColorSpace::AVCOL_SPC_YCGCO_RO` not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`sys::AVColorSpace` defined here","code":null,"level":"note","spans":[{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":394578,"byte_end":394599,"line_start":10871,"line_end":10871,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"pub enum AVColorSpace {","highlight_start":1,"highlight_end":22}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":396166,"byte_end":396182,"line_start":10902,"line_end":10902,"column_start":5,"column_end":21,"is_primary":false,"text":[{"text":"    AVCOL_SPC_IPT_C2 = 15,","highlight_start":5,"highlight_end":21}],"label":"not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":396241,"byte_end":396259,"line_start":10904,"line_end":10904,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    AVCOL_SPC_YCGCO_RE = 16,","highlight_start":5,"highlight_end":23}],"label":"not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":396317,"byte_end":396335,"line_start":10906,"line_end":10906,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    AVCOL_SPC_YCGCO_RO = 17,","highlight_start":5,"highlight_end":23}],"label":"not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the matched value is of type `sys::AVColorSpace`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ensure that all possible cases are being handled by adding a match arm with a wildcard pattern, a match arm with multiple or-patterns as shown, or multiple match arms","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/color/space.rs","byte_start":1678,"byte_end":1678,"line_start":61,"line_end":61,"column_start":44,"column_end":44,"is_primary":true,"text":[{"text":"            AVCOL_SPC_ICTCP => Space::ICTCP,","highlight_start":44,"highlight_end":44}],"label":null,"suggested_replacement":",\n            sys::AVColorSpace::AVCOL_SPC_IPT_C2 | sys::AVColorSpace::AVCOL_SPC_YCGCO_RE | sys::AVColorSpace::AVCOL_SPC_YCGCO_RO => todo!()","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0004]\u001b[0m\u001b[0m\u001b[1m: non-exhaustive patterns: `sys::AVColorSpace::AVCOL_SPC_IPT_C2`, `sys::AVColorSpace::AVCOL_SPC_YCGCO_RE` and `sys::AVColorSpace::AVCOL_SPC_YCGCO_RO` not covered\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/color/space.rs:44:15\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        match value {\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mpatterns `sys::AVColorSpace::AVCOL_SPC_IPT_C2`, `sys::AVColorSpace::AVCOL_SPC_YCGCO_RE` and `sys::AVColorSpace::AVCOL_SPC_YCGCO_RO` not covered\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `sys::AVColorSpace` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs:10871:1\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10871\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum AVColorSpace {\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10902\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AVCOL_SPC_IPT_C2 = 15,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot covered\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10903\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[doc = \"< YCgCo-R, even addition of bits\"]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10904\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AVCOL_SPC_YCGCO_RE = 16,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot covered\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10905\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[doc = \"< YCgCo-R, odd addition of bits\"]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10906\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AVCOL_SPC_YCGCO_RO = 17,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot covered\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the matched value is of type `sys::AVColorSpace`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern, a match arm with multiple or-patterns as shown, or multiple match arms\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            AVCOL_SPC_ICTCP => Space::ICTCP\u001b[0m\u001b[0m\u001b[38;5;10m,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m~             sys::AVColorSpace::AVCOL_SPC_IPT_C2 | sys::AVColorSpace::AVCOL_SPC_YCGCO_RE | sys::AVColorSpace::AVCOL_SPC_YCGCO_RO => todo!()\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"non-exhaustive patterns: `sys::AVFrameSideDataType::AV_FRAME_DATA_LCEVC` and `sys::AVFrameSideDataType::AV_FRAME_DATA_VIEW_ID` not covered","code":{"code":"E0004","explanation":"This error indicates that the compiler cannot guarantee a matching pattern for\none or more possible inputs to a match expression. Guaranteed matches are\nrequired in order to assign values to match expressions, or alternatively,\ndetermine the flow of execution.\n\nErroneous code example:\n\n```compile_fail,E0004\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x { // error: non-exhaustive patterns: `HastaLaVistaBaby` not covered\n    Terminator::TalkToMyHand => {}\n}\n```\n\nIf you encounter this error you must alter your patterns so that every possible\nvalue of the input type is matched. For types with a small number of variants\n(like enums) you should probably cover all cases explicitly. Alternatively, the\nunderscore `_` wildcard pattern can be added after all other patterns to match\n\"anything else\". Example:\n\n```\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    Terminator::HastaLaVistaBaby => {}\n}\n\n// or:\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    _ => {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/side_data.rs","byte_start":1733,"byte_end":1738,"line_start":81,"line_end":81,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"        match value {","highlight_start":15,"highlight_end":20}],"label":"patterns `sys::AVFrameSideDataType::AV_FRAME_DATA_LCEVC` and `sys::AVFrameSideDataType::AV_FRAME_DATA_VIEW_ID` not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`sys::AVFrameSideDataType` defined here","code":null,"level":"note","spans":[{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":443464,"byte_end":443492,"line_start":11616,"line_end":11616,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"pub enum AVFrameSideDataType {","highlight_start":1,"highlight_end":29}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":449886,"byte_end":449905,"line_start":11674,"line_end":11674,"column_start":5,"column_end":24,"is_primary":false,"text":[{"text":"    AV_FRAME_DATA_LCEVC = 28,","highlight_start":5,"highlight_end":24}],"label":"not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":450195,"byte_end":450216,"line_start":11676,"line_end":11676,"column_start":5,"column_end":26,"is_primary":false,"text":[{"text":"    AV_FRAME_DATA_VIEW_ID = 29,","highlight_start":5,"highlight_end":26}],"label":"not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the matched value is of type `sys::AVFrameSideDataType`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ensure that all possible cases are being handled by adding a match arm with a wildcard pattern, a match arm with multiple or-patterns as shown, or multiple match arms","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/side_data.rs","byte_start":4384,"byte_end":4384,"line_start":134,"line_end":134,"column_start":57,"column_end":57,"is_primary":true,"text":[{"text":"            AV_FRAME_DATA_VIDEO_HINT => Type::VIDEO_HINT,","highlight_start":57,"highlight_end":57}],"label":null,"suggested_replacement":",\n            sys::AVFrameSideDataType::AV_FRAME_DATA_LCEVC | sys::AVFrameSideDataType::AV_FRAME_DATA_VIEW_ID => todo!()","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0004]\u001b[0m\u001b[0m\u001b[1m: non-exhaustive patterns: `sys::AVFrameSideDataType::AV_FRAME_DATA_LCEVC` and `sys::AVFrameSideDataType::AV_FRAME_DATA_VIEW_ID` not covered\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/util/frame/side_data.rs:81:15\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        match value {\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mpatterns `sys::AVFrameSideDataType::AV_FRAME_DATA_LCEVC` and `sys::AVFrameSideDataType::AV_FRAME_DATA_VIEW_ID` not covered\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `sys::AVFrameSideDataType` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs:11616:1\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11616\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum AVFrameSideDataType {\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11674\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AV_FRAME_DATA_LCEVC = 28,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot covered\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11675\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[doc = \" This side data\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11676\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AV_FRAME_DATA_VIEW_ID = 29,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot covered\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the matched value is of type `sys::AVFrameSideDataType`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern, a match arm with multiple or-patterns as shown, or multiple match arms\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            AV_FRAME_DATA_VIDEO_HINT => Type::VIDEO_HINT\u001b[0m\u001b[0m\u001b[38;5;10m,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m~             sys::AVFrameSideDataType::AV_FRAME_DATA_LCEVC | sys::AVFrameSideDataType::AV_FRAME_DATA_VIEW_ID => todo!()\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"non-exhaustive patterns: `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_MIX_GAIN_PARAM`, `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_DEMIXING_INFO_PARAM`, `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_RECON_GAIN_INFO_PARAM` and 3 more not covered","code":{"code":"E0004","explanation":"This error indicates that the compiler cannot guarantee a matching pattern for\none or more possible inputs to a match expression. Guaranteed matches are\nrequired in order to assign values to match expressions, or alternatively,\ndetermine the flow of execution.\n\nErroneous code example:\n\n```compile_fail,E0004\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x { // error: non-exhaustive patterns: `HastaLaVistaBaby` not covered\n    Terminator::TalkToMyHand => {}\n}\n```\n\nIf you encounter this error you must alter your patterns so that every possible\nvalue of the input type is matched. For types with a small number of variants\n(like enums) you should probably cover all cases explicitly. Alternatively, the\nunderscore `_` wildcard pattern can be added after all other patterns to match\n\"anything else\". Example:\n\n```\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    Terminator::HastaLaVistaBaby => {}\n}\n\n// or:\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    _ => {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/packet/side_data.rs","byte_start":1182,"byte_end":1187,"line_start":61,"line_end":61,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"        match value {","highlight_start":15,"highlight_end":20}],"label":"patterns `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_MIX_GAIN_PARAM`, `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_DEMIXING_INFO_PARAM`, `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_RECON_GAIN_INFO_PARAM` and 3 more not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`sys::AVPacketSideDataType` defined here","code":null,"level":"note","spans":[{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":575071,"byte_end":575100,"line_start":14266,"line_end":14266,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"pub enum AVPacketSideDataType {","highlight_start":1,"highlight_end":30}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":583519,"byte_end":583550,"line_start":14332,"line_end":14332,"column_start":5,"column_end":36,"is_primary":false,"text":[{"text":"    AV_PKT_DATA_IAMF_MIX_GAIN_PARAM = 32,","highlight_start":5,"highlight_end":36}],"label":"not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":583827,"byte_end":583863,"line_start":14334,"line_end":14334,"column_start":5,"column_end":41,"is_primary":false,"text":[{"text":"    AV_PKT_DATA_IAMF_DEMIXING_INFO_PARAM = 33,","highlight_start":5,"highlight_end":41}],"label":"not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":584142,"byte_end":584180,"line_start":14336,"line_end":14336,"column_start":5,"column_end":43,"is_primary":false,"text":[{"text":"    AV_PKT_DATA_IAMF_RECON_GAIN_INFO_PARAM = 34,","highlight_start":5,"highlight_end":43}],"label":"not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":584398,"byte_end":584437,"line_start":14338,"line_end":14338,"column_start":5,"column_end":44,"is_primary":false,"text":[{"text":"    AV_PKT_DATA_AMBIENT_VIEWING_ENVIRONMENT = 35,","highlight_start":5,"highlight_end":44}],"label":"not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs","byte_start":584707,"byte_end":584733,"line_start":14340,"line_end":14340,"column_start":5,"column_end":31,"is_primary":false,"text":[{"text":"    AV_PKT_DATA_FRAME_CROPPING = 36,","highlight_start":5,"highlight_end":31}],"label":"not covered","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the matched value is of type `sys::AVPacketSideDataType`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown, or multiple match arms","code":null,"level":"help","spans":[{"file_name":"/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/packet/side_data.rs","byte_start":3571,"byte_end":3571,"line_start":108,"line_end":108,"column_start":71,"column_end":71,"is_primary":true,"text":[{"text":"            AV_PKT_DATA_DYNAMIC_HDR10_PLUS => Type::DYNAMIC_HDR10_PLUS,","highlight_start":71,"highlight_end":71}],"label":null,"suggested_replacement":",\n            _ => todo!()","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0004]\u001b[0m\u001b[0m\u001b[1m: non-exhaustive patterns: `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_MIX_GAIN_PARAM`, `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_DEMIXING_INFO_PARAM`, `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_RECON_GAIN_INFO_PARAM` and 3 more not covered\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ffmpeg-next-6.1.1/src/codec/packet/side_data.rs:61:15\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        match value {\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mpatterns `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_MIX_GAIN_PARAM`, `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_DEMIXING_INFO_PARAM`, `sys::AVPacketSideDataType::AV_PKT_DATA_IAMF_RECON_GAIN_INFO_PARAM` and 3 more not covered\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `sys::AVPacketSideDataType` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-browser/target/debug/build/ffmpeg-sys-next-9eb98b45eefdb0ed/out/bindings.rs:14266:1\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum AVPacketSideDataType {\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AV_PKT_DATA_IAMF_MIX_GAIN_PARAM = 32,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot covered\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[doc = \" IAMF Demixing Info Parameter Dat\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AV_PKT_DATA_IAMF_DEMIXING_INFO_PARAM = 33,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot covered\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[doc = \" IAMF Recon Gain Info Parameter D\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14336\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AV_PKT_DATA_IAMF_RECON_GAIN_INFO_PARAM = 34,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot covered\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[doc = \" Ambient viewing environment meta\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AV_PKT_DATA_AMBIENT_VIEWING_ENVIRONMENT = 35,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot covered\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[doc = \" The number of pixels to discard \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AV_PKT_DATA_FRAME_CROPPING = 36,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot covered\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the matched value is of type `sys::AVPacketSideDataType`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown, or multiple match arms\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            AV_PKT_DATA_DYNAMIC_HDR10_PLUS => Type::DYNAMIC_HDR10_PLUS\u001b[0m\u001b[0m\u001b[38;5;10m,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m~             _ => todo!()\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 30 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 30 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0004, E0425, E0609.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0004, E0425, E0609.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0004`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0004`.\u001b[0m\n"}
